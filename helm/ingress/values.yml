issuer:
  email:
domains:
  - names:
      common_name:
      subject_alternative_names:
    server_snippets:
    letsencrypt_prod: false
    robots:
      entries:
        - user_agent: "*"
          disallow:
            - /
          allow:
      sitemap:
      replicaCount: 1
nginx-ingress:
  controller:
    # enabling snippets is associated with security risks. 
    # enabling them without further precautions is ok for this project as we focus one a single-user dev cluster.
    # for details see https://github.com/kubernetes/ingress-nginx/issues/7837
    enableSnippets: true
    serviceAccount:
      name: nginx-ingress
    setAsDefaultIngress: true
    replicaCount: 1
    hostNetwork: true
    ingressClass: nginx-kubeip
    useIngressClassOnly: true
    service:
      annotations:
        networking.gke.io/load-balancer-type: Internal
      httpPort:
        enable: true
      httpsPort:
        enable: true
    defaultTLS:
      secret:
    wildcardTLS:
      secret:
    config:
      entries:
        proxy-buffering: "True"
        proxy-buffers: "16 128k"
        proxy-buffer-size: 16k
        default-server-return: "444"
        server-tokens: "False"
        http2: "True"
        proxy-protocol: "False"
        # set via server-snippets in the ingress template to allow acme challenge via http
        ssl-redirect: "False"
        hsts: "False"
        hsts-max-age: "63072000"
        hsts-include-subdomains: "True"
        http-snippets: |
          # secp521r1 not supported by chrome anymore
          ssl_ecdh_curve secp384r1;
          # TLSv1.3, more secure, but not RFC 8446 compliant to exclude TLS_AES_128_GCM_SHA256
          ssl_conf_command Ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;

          ssl_session_timeout 1d;
          ssl_session_cache shared:SSL:100m;  # about 400000 sessions
          ssl_session_tickets off;

          # google DNS for OCSP stapling
          resolver 8.8.8.8 8.8.4.4;
          # OCSP stapling
          ssl_stapling on;
          ssl_stapling_verify on;
        # ssl config from mozilla https://ssl-config.mozilla.org/
        # intermediate configuration, with 128 bit key exchanges removed
        ssl-protocols: "TLSv1.2 TLSv1.3"
        ssl-ciphers: >
          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384
        ssl-prefer-server-ciphers: "False"
        # use output from generate_openssl_dhparams.sh
        ssl-dhparam-file:
        log-format-escaping: json
        log-format: >
          {
            "time":"$msec",
            "httpRequest":{
              "requestMethod":"$request_method",
              "requestUrl":"$scheme://$host$request_uri",
              "requestSize":$request_length,
              "status":$status,
              "responseSize":$bytes_sent,
              "userAgent":"$http_user_agent",
              "remoteIp":"$remote_addr",
              "serverIp":"$server_addr",
              "referer":"$http_referer",
              "latency":"${request_time}s",
              "protocol":"$server_protocol"
            }
          }
