apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress
data:
  default.conf: |
    gzip on;
    resolver kube-dns.kube-system.svc.cluster.local valid=30s ipv6=off;
    log_format combinedHost '$http_x_forwarded_for $remote_addr $remote_user [$time_local] "$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time';
    access_log off;

    server {
      access_log  /var/log/nginx/access.log  combinedHost;
      server_name _;
      listen 80 default_server;
      listen 443 default_server;
      server_tokens off;
{{ include "ssl" . | indent 6 }}
      location /health {
         access_log off;
         return 200;
      }
      location / {
         return 404;
      }
    }

{{- range .Values.domains }}
    server {
      access_log  /var/log/nginx/access.log  combinedHost;
      server_name{{- range .names }} {{ . }}{{- end }};
      server_tokens off;
      listen 80;

{{ if $.Values.https.enabled }}
{{- range .https }}
      location {{ .path }} {
         return 301 https://$host$request_uri;
      }
{{- end }}
{{- end }}
{{- range .http }}
      location {{ .path }} {
{{ include "proxyPass" . | indent 8 }}
      }
{{- end }}
    }

{{ if $.Values.https.enabled }}
    server {
      access_log  /var/log/nginx/access.log  combinedHost;
      server_name{{- range .names }} {{ . }}{{- end }};
      server_tokens off;
      listen 443 http2 ssl;

{{- range .https }}
      location {{ .path }} {
{{ include "proxyPass" . | indent 8 }}
{{ if $.Values.https.hsts.enabled }}
        add_header Strict-Transport-Security "max-age={{ $.Values.https.hsts.max_age }}; includeSubDomains; preload" always;
{{ end }}
{{ if $.Values.https.expect_ct.enabled }}
        add_header Expect-CT "enforce, max-age={{ $.Values.https.expect_ct.max_age }} " always;
{{ end }}
      }
{{- end }}
{{ include "ssl" . | indent 6 }}
    }
{{ end }}
{{ end }}
